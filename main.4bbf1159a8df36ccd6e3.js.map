{"version":3,"sources":["webpack:///./js-1.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":"0HAIMA,EAAQ,SAAAC,GAEZ,OAAO,IAAIC,SAAQ,SAACC,GAClBC,YAAW,WAAQD,EAAQF,KAAOA,OAIhCI,EAAS,SAAAC,GAAI,OAAIC,QAAQC,IAAR,kBAA8BF,EAA9B,OAGvBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ,K","file":"main.4bbf1159a8df36ccd6e3.js","sourcesContent":["//Напиши функцию delay(ms), которая возвращает промис,\r\n//переходящий в состояние \"resolved\" через ms миллисекунд.\r\n//Значением исполнившегося промиса должно быть то кол - во миллисекунд которое передали во время вызова функции delay.\r\n\r\nconst delay = ms => {\r\n  // Твой код\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => { resolve(ms) }, ms);\r\n  });\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms"],"sourceRoot":""}